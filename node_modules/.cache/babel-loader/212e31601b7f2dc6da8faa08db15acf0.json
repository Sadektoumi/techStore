{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS } from '../types';\nimport swal from 'sweetalert';\nexport const register = (body, history) => async dispatch => {\n  try {\n    const res = await axios.post(`http://127.0.0.1:8000/api/register`, body);\n    console.log('hey register', res.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data.res\n    });\n    console.log('hey register', res.data);\n    swal(\"success\", res.data.message, \"success\");\n    res.data.success !== undefined && res.data.success && history.replace(\"/SeConnecter\");\n  } catch (e) {\n    console.log('heyerror', e);\n  }\n};\nexport const login = (body, history) => async dispatch => {\n  try {\n    const res = await axios.post(`http://127.0.0.1:8000/api/login`, body);\n    console.log('heydata', res.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.res\n    });\n    swal(\"success\", res.data.message, \"success\");\n    res.data.success !== undefined && res.data.success && localStorage.setItem(\"user\", JSON.stringify(res.data));\n    localStorage.setItem(\"token\", res.data.access_token);\n    history.push('/');\n    window.location.reload(false);\n  } catch (e) {\n    console.log('heyerror', e);\n  }\n};\nexport const postIntervention = (body, Authorization, history) => async dispatch => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + `${Authorization}`\n  };\n  axios.post(\"http://127.0.0.1:8000/api/interventionPost\", body, {\n    headers: headers\n  }).then(response => {\n    console.log('hey intervention', response.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data.res\n    });\n    swal.fire('intervention Successfully created', '', 'success');\n    history.replace(\"/\");\n  }).catch(error => {\n    console.log('heyerror', error);\n  });\n};\nexport const logout = (Authorization, history) => async dispatch => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + `${Authorization}`\n  };\n  axios.post(`http://127.0.0.1:8000/api/logout`, {\n    headers: headers\n  }).then(res => {\n    if (res.data.status === 201) {\n      localStorage.removeItem('token');\n      swal(\"success\", res.data.message, \"success\");\n      ;\n      history.push('/');\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/DreamNet/Desktop/stage 2eme/techStore1.2/src/redux/actions/user.actions.js"],"names":["axios","LOGIN_SUCCESS","REGISTER_SUCCESS","swal","register","body","history","dispatch","res","post","console","log","data","type","payload","message","success","undefined","replace","e","login","localStorage","setItem","JSON","stringify","access_token","push","window","location","reload","postIntervention","Authorization","headers","then","response","fire","catch","error","logout","status","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS } from '../types';\r\nimport swal from 'sweetalert';\r\n\r\nexport const register = (body,history) => async dispatch => {\r\n    try{\r\n        const res = await axios.post(`http://127.0.0.1:8000/api/register`,body);\r\n        console.log('hey register',res.data)\r\n        dispatch( {\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data.res\r\n        })\r\n        console.log('hey register',res.data)\r\n        swal(\"success\",res.data.message,\"success\");\r\n        res.data.success !== undefined && res.data.success && history.replace(\"/SeConnecter\")\r\n    \r\n    }\r\n    catch(e){\r\n        console.log('heyerror',e)\r\n    }\r\n}\r\n\r\nexport const login = (body,history ) => async dispatch => {\r\n    try{\r\n        const res = await axios.post(`http://127.0.0.1:8000/api/login`,body);\r\n        console.log('heydata',res.data)\r\n        dispatch( {\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data.res\r\n        })\r\n        swal(\"success\",res.data.message,\"success\");\r\n\r\n        res.data.success !== undefined && res.data.success && \r\n        localStorage.setItem(\"user\",JSON.stringify(res.data))\r\n        localStorage.setItem(\"token\",res.data.access_token)\r\n        history.push('/');\r\n        window.location.reload(false);\r\n    }\r\n    catch(e){\r\n        console.log('heyerror',e)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postIntervention = (body,Authorization,history) => async dispatch => {\r\n  \r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + `${Authorization}`\r\n      }\r\n      \r\n      axios.post(\"http://127.0.0.1:8000/api/interventionPost\", body, {\r\n          headers: headers\r\n        })\r\n        .then((response) => {\r\n            console.log('hey intervention',response.data)\r\n            dispatch( {\r\n                type: REGISTER_SUCCESS,\r\n                payload: response.data.res\r\n            })\r\n            swal.fire('intervention Successfully created', '', 'success');\r\n            history.replace(\"/\")\r\n        })\r\n        .catch((error) => {\r\n            console.log('heyerror',error)\r\n        })\r\n}\r\n\r\n export const logout = (Authorization,history)=> async dispatch => {\r\n    \r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + `${Authorization}`\r\n      }\r\n\r\n      axios.post(`http://127.0.0.1:8000/api/logout`, {\r\n        headers: headers\r\n      })\r\n      \r\n      .then(res => {\r\n        if(res.data.status === 201){\r\n          localStorage.removeItem('token');\r\n          swal(\"success\",res.data.message,\"success\");;\r\n          history.push('/');\r\n          \r\n        } \r\n    \r\n    \r\n       })\r\n        \r\n\r\n\r\n\r\n\r\n   \r\n}\r\n  \r\n"]},"metadata":{},"sourceType":"module"}